<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<!--
	@MapperName com.kingtopinfo.base.mapper.TBaseRoleMapper
	@Description T_BASE_ROLE表映射配置文件
	@author dzb@kingtopinfo.com
	@date 2014-02-18 09:22:06
	@version 1.0
	@remark create by generator
	-->
	<!-- 剪切至  mybatis-config.xml
	
	-->
	
<mapper namespace="com.godgoddess.base.mapper.TBaseRoleMapper">

	<select id="selectRoleNameByAccount" resultType="tBaseRoleEntity" parameterType="map">
		select 
			t3.rolename 
		from 
			t_base_user t1 , t_base_user_role_mapping t2,t_base_role t3
 		where 
 			t1.id=t2.userid and t3.id= t2.roleid 
 			and t1.account = #{account}
	</select>

	
	<select id="select" resultType="tBaseRoleEntity">
		select 
			id,rolename,pid,updatetime 
		from 
			T_BASE_ROLE
	</select>
	
	<select id="selectByKey" resultType="tBaseRoleEntity" parameterType="String">
		select 
			id,rolename,pid,updatetime 
		from 
			T_BASE_ROLE 
		where 
			id = #{id}
	</select>
	
	<select id="selectByPid" resultType="tBaseRoleEntity" parameterType="String">
        select 
            id,rolename,pid,updatetime 
        from 
            T_BASE_ROLE 
        where 
            pid = #{pid}
    </select>
	
	<insert id="insert" parameterType="tBaseRoleEntity">
		insert into T_BASE_ROLE(
			id,pid,rolename,updatetime
		)values(
			#{id,jdbcType=VARCHAR},
			#{pid, jdbcType=VARCHAR},
			#{rolename, jdbcType=VARCHAR},
			#{updatetime, jdbcType=TIME}
		)
	</insert>
	
	<update id="update" parameterType="tBaseRoleEntity">
		update T_BASE_ROLE
		set 
			rolename = #{rolename,jdbcType=VARCHAR}, updatetime = #{updatetime, jdbcType=TIME} 
		where 
			id = #{id}
	</update>
	
	<update id="move" parameterType="tBaseRoleEntity">
        update T_BASE_ROLE
        set 
            pid = #{pid,jdbcType=VARCHAR}
        where 
            id = #{id}
    </update>
	
	<delete id="delete" parameterType="String">
		delete FROM T_BASE_ROLE where id = #{id}
	</delete>
	
	<!-- 以上为代码生成器自动生成 -->
	<select id="selectAddedMenuRoles" resultType="tBaseRoleEntity">
        select 
            id,rolename,pid,updatetime 
        from 
            T_BASE_ROLE 
        where 
            id in (select roleid from T_BASE_ROLE_MENU_MAPPING rm where rm.menuid = #{menuid})
    </select>
    
    <select id="selectMKMenuRoles" resultType="tBaseRoleEntity">
        select 
            id,rolename,pid,updatetime 
        from 
            T_BASE_ROLE 
        where 
            id in (select roleid from T_MK_MENU_MAPPING rm where rm.menuid = #{menuid})
    </select>
    
    <select id="selectAddedHelpRoles" resultType="tBaseRoleEntity">
        select 
            id,rolename,pid,updatetime 
        from 
            T_BASE_ROLE 
        where 
            id in (select roleid from T_HELP_ROLE_MAPPING hm where hm.menuid = #{menuid})
    </select>
    
    <select id="selectRoleIdByAccount" resultType="String" parameterType="String">
        select 
            roleid
        from 
            T_BASE_USER_ROLE_MAPPING 
        where 
            userid in (select t.id from T_BASE_USER t where t.account = #{account})
    </select>
    
    <select id="selectRolesByUserid" resultType="tBaseRoleEntity" parameterType="String">
        select 
            t.*
        from 
            T_BASE_ROLE t,T_BASE_USER_ROLE_MAPPING t1
        where 
            t.id = t1.roleid
            and t1.userid = #{userid}
    </select>
    
</mapper>